CREATE TABLE "User" (
  "Id" int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
  "JobID" int,
  "CompanyId" int,
  "FullName" string,
  "Email" string,
  "Phone" string,
  "UserName" string,
  "Password" string,
  "RoleID" int,
  "ProfilePicture" string,
  "DateOfBirth" datetime,
  "Gender" string,
  "Address" string,
  "City" string,
  "Country" string,
  "CreatedDate" datetime,
  "LastLogin" datetime,
  "IsDeleted" bool,
  "IsActive" bool
);

CREATE TABLE "Company" (
  "Id" int PRIMARY KEY,
  "BusinessStreamId" int,
  "CompanyName" string,
  "CompanyDescription" text,
  "WebsiteURL" string,
  "EstablishedYear" int,
  "Country" string,
  "City" string,
  "Address" string,
  "NumberOfEmployees" int
);

CREATE TABLE "BusinessStream" (
  "Id" int,
  "BusinessStreamName" string,
  "Description" text
);

CREATE TABLE "JobPost" (
  "Id" int PRIMARY KEY,
  "CompanyId" int,
  "UserId" int,
  "JobTypeId" int,
  "JobLocationId" int,
  "JobTitle" string,
  "JobDescription" text,
  "Salary" decimal(10,2),
  "Currency" string,
  "EmploymentType" string,
  "PostingDate" datetime,
  "ExpiryDate" datetime,
  "NumberOfVacancies" int,
  "ExperienceRequired" int,
  "QualificationRequired" string,
  "Benefits" text,
  "IsActive" bool
);

CREATE TABLE "Application" (
  "Id" int PRIMARY KEY,
  "JobPostId" int,
  "UserId" int,
  "ApplicationDate" datetime,
  "Status" string,
  "CVId" int
);

CREATE TABLE "JobType" (
  "Id" int,
  "Name" string,
  "Description" text
);

CREATE TABLE "JobLocation" (
  "Id" int,
  "District" string,
  "City" string,
  "PostCode" string,
  "State" string,
  "Country" string
);

CREATE TABLE "SkillSet" (
  "Id" int,
  "Name" string,
  "Shorthand" string,
  "Description" text,
  "SkillLevel" string
);

CREATE TABLE "JobSkillSet" (
  "SkillSetId" int,
  "JobId" int,
  "SkillLevelRequired" string
);

CREATE TABLE "CVs" (
  "Id" int PRIMARY KEY,
  "url" string,
  "UserId" int
);

CREATE TABLE "SeekerSkillSet" (
  "UserId" int,
  "SkillSetId" int,
  "ProficiencyLevel" string
);

CREATE TABLE "EducationDetail" (
  "Id" int PRIMARY KEY,
  "UserId" int,
  "Name" string,
  "InstitutionName" string,
  "Degree" string,
  "FieldOfStudy" string,
  "StartDate" datetime,
  "EndDate" datetime,
  "GPA" decimal(3,2)
);

CREATE TABLE "ExperienceDetail" (
  "Id" int PRIMARY KEY,
  "UserId" int,
  "CompanyName" string,
  "Position" string,
  "StartDate" datetime,
  "EndDate" datetime,
  "Responsibilities" text,
  "Achievements" text
);

CREATE TABLE "Review" (
  "Id" int PRIMARY KEY,
  "UserId" int,
  "CompanyId" int,
  "Rating" int,
  "ReviewContent" string
);

ALTER TABLE "JobPost" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "JobPost" ADD FOREIGN KEY ("CompanyId") REFERENCES "Company" ("Id");

ALTER TABLE "JobPost" ADD FOREIGN KEY ("JobTypeId") REFERENCES "JobType" ("Id");

ALTER TABLE "JobPost" ADD FOREIGN KEY ("JobLocationId") REFERENCES "JobLocation" ("Id");

ALTER TABLE "JobSkillSet" ADD FOREIGN KEY ("JobId") REFERENCES "JobPost" ("Id");

ALTER TABLE "JobSkillSet" ADD FOREIGN KEY ("SkillSetId") REFERENCES "SkillSet" ("Id");

ALTER TABLE "SeekerSkillSet" ADD FOREIGN KEY ("SkillSetId") REFERENCES "SkillSet" ("Id");

ALTER TABLE "Company" ADD FOREIGN KEY ("BusinessStreamId") REFERENCES "BusinessStream" ("Id");

ALTER TABLE "Application" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "Application" ADD FOREIGN KEY ("JobPostId") REFERENCES "JobPost" ("Id");

ALTER TABLE "Review" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "Review" ADD FOREIGN KEY ("CompanyId") REFERENCES "Company" ("Id");

ALTER TABLE "ExperienceDetail" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "CVs" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "EducationDetail" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "User" ADD FOREIGN KEY ("CompanyId") REFERENCES "Company" ("Id");

ALTER TABLE "SeekerSkillSet" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "Application" ADD FOREIGN KEY ("CVId") REFERENCES "CVs" ("Id");
